How to construct the unit test.

**note Read the README first!**

tep1: create a new folder with the name of the function you are testing inside cognito_form/tests/

Step2: copy the context.js, event.js, and test.js files from one of the existing tests, and place it in your new folder.

Step3: inside the test.js file, replace the change.log() with the previous test name, with the one you intend to make.

Step4: Open a browser to the Amazon developer portal containing the Alexa simulator. type the input you wish to test into the simulator and press enter. JSON input data will be created in the "skill I/O" window, copy the contents of the "JSON Input"
window and run the simulation. The simulator will create a Json input & Json output.

Step5: Select and copy the Json input from step4, and replace the contents of event.js, with that input.

Step6: Inside the cognito_form/package.json, add a "," to the last test you see in the "scripts" object. Now add "test<insert Number here>": "node ./tests/<your folder name here>/test.js". The package.Json should now look similar to this:


{
  "name": "cognito_form",
  "version": "1.0.0",
  "description": "Description:",
  "main": "index.js",
  "scripts": {
    "test1": "node ./tests/launch/test.js",
    "test2": "node ./tests/get_new_form/test.js",
    "test3": "node ./tests/get_next_question/test.js",
    "behave1": "npm-run-all test[1-3]",
    "test<insert Number here>": "node ./tests/<your folder name here>/test.js"

  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "alexa-sdk": "^1.0.25",
    "aws-sdk": "^2.392.0"
  },
  "devDependencies": {}
}

     You should now be able to execute your test, by using the instructions in the README.

*note make sure the paths in the tests files are correct for your project, if you've altered the project from the way its presented when you original.
